@page "/media"
@inject IJSRuntime JS

<div class="d-flex flex-column vh-100 p-0">
  <div class="top-row"></div>

  <div class="media-container d-flex flex-column flex-fill overflow-hidden">
    <h3 class="px-4 mb-2">Media Library</h3>

    <!-- overlay sits on top until we call JS to hide it -->
    <div @ref="overlayEl" class="media-overlay d-flex align-items-center justify-content-center">
      <div class="spinner-border" role="status">
        <span class="visually-hidden">Loadingâ€¦</span>
      </div>
    </div>

    <iframe
      @ref="iframeEl"
      src="/wp-admin/upload.php"
      class="media-iframe flex-fill w-100 border-0">
    </iframe>
  </div>
</div>

@code {
  private ElementReference iframeEl;
  private ElementReference overlayEl;
  private DotNetObjectReference<Media>? dotnetRef;

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      dotnetRef = DotNetObjectReference.Create(this);
      await JS.InvokeVoidAsync("wpMedia.initMediaPage", iframeEl, overlayEl, dotnetRef);
    }
  }

  [JSInvokable]
  public Task IframeHasLoaded()
  {
    // you can do any further .NET-side logic here if needed
    return Task.CompletedTask;
  }

  public void Dispose()
  {
    dotnetRef?.Dispose();
  }
}
