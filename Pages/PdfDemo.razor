@page "/pdf-demo"

<PageTitle>PDF → PNG Converter</PageTitle>

<!-- Noto Sans JP CJK font via LibMan -->
<link rel="stylesheet" href="./libman/noto-sans-jp/index.css" />

<style>
    input, a { display: block; margin-top: 1rem; }
    canvas { display: none; }
    img { display: block; margin-top: 1rem; max-width: 100%; border: 1px solid #ccc; }
</style>

<h1>PDF → PNG Converter</h1>
<input type="file" id="file-input" accept="application/pdf" />
<canvas id="canvas"></canvas>
<img id="output" alt="PNG preview" />
<a id="download">Download as PNG</a>

@* PDF.js rendering *@
<script type="module">
    // ESM core build
    import * as pdfjsLib from './libman/pdfjs-dist/build/pdf.mjs';
    // Tell PDF.js where to find its worker
    pdfjsLib.GlobalWorkerOptions.workerSrc = './libman/pdfjs-dist/build/pdf.worker.mjs';

    const cMapBaseUrl = './libman/pdfjs-dist/cmaps/';
    const cMapPacked  = true;

    const { getDocument } = pdfjsLib;
    const fileInput = document.getElementById('file-input');
    const canvas    = document.getElementById('canvas');
    const outputImg = document.getElementById('output');
    const download  = document.getElementById('download');

    fileInput.addEventListener('change', async () => {
        const file = fileInput.files[0];
        if (!file) return;

        const arrayBuffer = await file.arrayBuffer();
        const loadingTask = getDocument({
            data: arrayBuffer,
            cMapUrl:  cMapBaseUrl,
            cMapPacked
        });
        const pdf = await loadingTask.promise;

        const page     = await pdf.getPage(1);
        const viewport = page.getViewport({ scale: 2 });

        canvas.width  = viewport.width;
        canvas.height = viewport.height;
        const ctx = canvas.getContext('2d');
        await page.render({ canvasContext: ctx, viewport }).promise;

        const dataUrl = canvas.toDataURL('image/png');
        outputImg.src        = dataUrl;
        download.href        = dataUrl;
        download.download    = file.name.replace(/\.pdf$/i, '.png');
        download.textContent = `Download ${download.download}`;
    });
</script>
